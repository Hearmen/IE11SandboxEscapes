// This file is part of IE11SandboxEsacapes.

// IE11SandboxEscapes is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// IE11SandboxEscapes is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with IE11SandboxEscapes.  If not, see <http://www.gnu.org/licenses/>.

#include "stdafx.h"

SAFEARRAY* SafeArrayFromVector(const std::vector<unsigned char>& v)
{
	SAFEARRAY * psa;
	SAFEARRAYBOUND rgsabound[1];

	rgsabound[0].lLbound = 0;
	rgsabound[0].cElements = (ULONG)v.size();
	psa = SafeArrayCreate(VT_UI1, 1, rgsabound);
	if (psa != NULL)
	{
		void* p;

		SafeArrayAccessData(psa, &p);

		memcpy(p, &v[0], v.size());

		SafeArrayUnaccessData(psa);
	}

	return psa;
}

// This emulates the code in flashbroker
bstr_t GetUserDirectory(std::wstring name)
{
	WCHAR buf[MAX_PATH + 1] = L"";
	HKEY hKey;
	LSTATUS status;

	status = RegOpenKeyExW(HKEY_CURRENT_USER, L"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", 0, KEY_QUERY_VALUE, &hKey);
	if (status == 0)
	{
		DWORD dwType = 0;
		DWORD dwSize = sizeof(buf)-sizeof(WCHAR);

		status = RegQueryValueExW(hKey, name.c_str(), nullptr, &dwType, reinterpret_cast<LPBYTE>(buf), &dwSize);
		if ((status == 0) && (dwType == REG_SZ))
		{
			// Ensure nul termination
			buf[dwSize / 2] = 0;
		}
		else
		{
			DebugPrintf("Error querying value: %d\n", status);
		}
	}
	else
	{
		DebugPrintf("Error opening key: %d\n", status);
	}

	return buf;
}

bstr_t GetTempDir()
{
	WCHAR tempPath[MAX_PATH];

	GetTempPath(MAX_PATH, tempPath);

	return tempPath;
}
